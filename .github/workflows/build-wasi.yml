name: Build WASI
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - 'master'
    tags:
      - '*'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      MODE: release
      TARGET_OS: wasi
      TARGET_ARCH: ${{ matrix.arch }}
      JOBS: 4
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019,windows-2022,ubuntu-20.04,ubuntu-22.04,ubuntu-24.04,macos-12,macos-13,macos-14,macos-15]
        arch: [wasm32]
        sdk: [24]
    steps:
    
    # Checkout
    - name: Checkout
      uses: actions/checkout@v4
    
    # Install WASI SDK
    #-# name: Install WASI SDK
     # uses: cyberjunk/gha-wasi-install@main
     # with:
     #   version: 24.0

    - name: Setup ENV
      shell: bash
      run: |
        echo Running on: $ImageOS
        if [ $ImageOS == macos12 ] || [ $ImageOS == macos13 ]; then \
          WASI_OS=macos; \
          WASI_ARCH=x86_64; \
          WASMER_OS=darwin; \
          WASMER_ARCH=amd64; \
        elif [ $ImageOS == macos14 ] || [ $ImageOS == macos15 ]; then \
          WASI_OS=macos; \
          WASI_ARCH=arm64; \
          WASMER_OS=darwin; \
          WASMER_ARCH=arm64; \
        elif [ $ImageOS == ubuntu20 ] || [ $ImageOS == ubuntu22 ] || [ $ImageOS == ubuntu24 ]; then \
          WASI_OS=linux; \
          WASI_ARCH=x86_64; \
          WASMER_OS=linux; \
          WASMER_ARCH=amd64; \
        elif [ $ImageOS == win19 ] || [ $ImageOS == win22 ]; then \
          WASI_OS=windows; \
          WASI_ARCH=x86_64; \
          WASMER_OS=windows; \
          WASMER_ARCH=amd64; \
        else \
          echo UNKNOWN OPERATING SYSTEM; \
          exit 1; \
        fi
        echo WASI_OS=$WASI_OS >> "$GITHUB_ENV"
        echo WASI_ARCH=$WASI_ARCH >> "$GITHUB_ENV"
        echo WASMER_OS=$WASMER_OS >> "$GITHUB_ENV"
        echo WASMER_ARCH=$WASMER_ARCH >> "$GITHUB_ENV"

    # Install WASI SDK
    - name: Install WASI SDK
      shell: bash
      env:
        VERSIONMAJOR: ${{ matrix.sdk }}
        VERSIONMINOR: 0
        EXT: tar.gz
      run: |
        FILENAME=wasi-sdk-$VERSIONMAJOR.$VERSIONMINOR-$WASI_ARCH-$WASI_OS
        URL=https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-$VERSIONMAJOR/$FILENAME.$EXT
        curl -L -O $URL
        tar xfz $FILENAME.$EXT
        rm -f $FILENAME.$EXT
        echo WASI_SDK_PATH=$(pwd)/$FILENAME >> "$GITHUB_ENV"

    # Install Wasmer
    - name: Install Wasmer
      shell: bash
      env:
        VERSIONMAJOR: 4
        VERSIONMINOR: 4
        VERSIONPATCH: 0
        EXT: tar.gz
      run: |
        FILENAME=wasmer-$WASMER_OS-$WASMER_ARCH
        URL=https://github.com/wasmerio/wasmer/releases/download/v$VERSIONMAJOR.$VERSIONMINOR.$VERSIONPATCH/$FILENAME.$EXT
        curl -L -O $URL
        mkdir $FILENAME
        tar xfz $FILENAME.$EXT -C ./$FILENAME
        rm -f $FILENAME.$EXT
        PATH="$(pwd)/$FILENAME/bin;$PATH"
        echo $PATH
        echo WASMER_DIR=$(pwd)/$FILENAME >> "$GITHUB_ENV"
        echo PATH=$PATH >> "$GITHUB_ENV"

    # Clang Version
    - name: Clang Version
      shell: bash
      run: |
        $WASI_SDK_PATH/bin/clang --version

    # Wasmer Version
    - name: Wasmer Version
      shell: bash
      run: |
        echo $WASMER_DIR
        wasmer --version

    # Build
    - name: Build
      run: |
        make -j${{ env.JOBS }}

    # Test
    - name: Test
      shell: bash
      run: make test
